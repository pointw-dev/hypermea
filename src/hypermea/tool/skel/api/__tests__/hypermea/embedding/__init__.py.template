from pytest_bdd import given, when, then, parsers
from __tests__ import *
from __tests__.hypermea import *

FEATURE = 'hypermea/embedding.feature'

"""
  Background:
    Given a parent and a child resource are configured
    And each resource has multiple items
"""


@then('the parent item has no embedded property')
def step_impl(context):
    assert_that(context['resource']).does_not_contain('_embedded')

@then('the child item has no embedded property')
def step_impl(context):
    assert_that(context['resource']).does_not_contain('_embedded')


@then("the collection is in the response in the embedded property with the appropriate link relation")
def step_impl(context):
    assert_that(context['collection']).contains_key('_embedded')
    assert_that(context['collection']['_embedded']).contains_key(context['rel'])
    assert_that(context['collection']['_embedded'][context['rel']]).is_type_of(list)

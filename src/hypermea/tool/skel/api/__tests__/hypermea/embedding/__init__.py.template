from pytest_bdd import given, when, then, parsers
from __tests__ import *
from __tests__.hypermea import *

FEATURE = 'hypermea/embedding.feature'

"""
  Background:
    Given a parent and a child resource are configured
    And each resource has multiple items
"""


@when('a client requests a parent item asking for related children')
def step_impl(api, context):
    result = api.get(f"/people/{context['first_person_id']}?embed=cars")
    assert_that(result.status_code).is_equal_to(200)
    context['person'] = result.json


@then('the parent item has no embedded property')
def step_impl(context):
    assert_that(context['person']).does_not_contain('_embedded')

@then('the child item has no embedded property')
def step_impl(context):
    assert_that(context['car']).does_not_contain('_embedded')


@then("the collection is in the response in the embedded property with the appropriate link relation")
def step_impl(context):
    assert_that(context['collection']).contains_key('_embedded')
    assert_that(context['collection']['_embedded']).contains_key(context['rel'])
    assert_that(context['collection']['_embedded'][context['rel']]).is_type_of(list)

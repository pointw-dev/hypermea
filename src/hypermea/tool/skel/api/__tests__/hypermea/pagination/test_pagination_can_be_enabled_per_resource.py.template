import pytest
from urllib.parse import urlparse, parse_qsl, urlencode, urlunparse
from pytest_bdd import given, when, then, parsers
from __tests__.hypermea import *
from __tests__.hypermea.pagination import *


@pytest.fixture(scope='module')
def context():
    return {}


@annotated_scenario(FEATURE_PATH, 'Pagination can be enabled per resource')
def test_pagination_can_be_enabled_per_resource():
    pass


# Given pagination is disabled globally
@given('a resource is configured to allow pagination')
def step_impl(settings_py):
    settings_py['DOMAIN'] = {
        'people': {
            'schema': {
                'name': {'type': 'string'}
            },
            'pagination': True
        }
    }
# And that resource has 100 items in its collection
# When a client requests this collection with a limit of <limit>
# Then the collection in the response has <limit> items
# And the prev link relation is <prev_link>
# And the next link relation is <next_link>
# And the value of the last page is <last_page>

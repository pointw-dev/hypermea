import json

from __tests__ import *
from assertpy import assert_that
from pytest_bdd import given, when, then

FEATURE_PATH = 'hypermea/sorting.feature'


@given('that resource has multiple items in its collection')
def step_impl(api):
    people = []
    for name in ['Robert', 'James', 'Cheryl', 'Jessica', 'Cory', 'Michael', 'Catherine', 'Mark', 'Jacqueline', 'Marissa']:
        people.append({'name': name})
    response = api.post(
        '/people',
        data=json.dumps(people),
        headers={'content-type': 'application/json'}
    )
    assert_that(response.status_code).is_equal_to(201)

@given('sorting is disabled globally')
def step_impl(settings_py):
    settings_py['SORTING'] = False


# shared When step definitions
@when('a client requests this collection with a sort query string')
def step_impl(api, context):
    response = api.get(
        '/people?sort=name'
    )
    assert_that(response.status_code).is_equal_to(200)
    context['people'] = response.json['_items']


# shared Then step definitions
@then('the collection in the response is sorted accordingly')
def step_impl(context):
    names = [i['name'] for i in context['people']]
    is_sorted = all([True if index == 0 else item >= names[index-1] for index, item in enumerate(names)])
    assert_that(is_sorted).is_equal_to(True)

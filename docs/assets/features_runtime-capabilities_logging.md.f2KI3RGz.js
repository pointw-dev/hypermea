import{_ as t,C as l,c as s,o as a,j as i,al as n,a as d,G as r}from"./chunks/framework.CEo5TfsR.js";const k=JSON.parse('{"title":"Logging","description":"","frontmatter":{},"headers":[],"relativePath":"features/runtime-capabilities/logging.md","filePath":"features/runtime-capabilities/logging.md"}'),c={name:"features/runtime-capabilities/logging.md"},g={class:"warning custom-block"};function u(p,e,h,m,_,E){const o=l("centered-image");return a(),s("div",null,[e[2]||(e[2]=i("h1",{id:"logging",tabindex:"-1"},[d("Logging "),i("a",{class:"header-anchor",href:"#logging","aria-label":'Permalink to "Logging"'},"â€‹")],-1)),i("div",g,[e[0]||(e[0]=i("p",{class:"custom-block-title"},"Work in progress",-1)),r(o,{src:"/img/work-in-progress.png"}),e[1]||(e[1]=i("p",null,"This warning will be removed once this page has passed testing.",-1))]),e[3]||(e[3]=n('<ul><li><p>out of the box, the python logging module is configured with</p><ul><li>TRACE level <ul><li>use as you wish (<code>LOG.trace(&#39;very verbose message here&#39;)</code>)</li><li>Use <code>@trace</code> decorator to automatically log a function&#39;s enter and exit (even if exception is thrown)</li><li>Disable with HY_TRACE_LOGGING to avoid stepping into the detailed logger when debugging (disabled by default in your <code>_env.conf</code>)</li></ul></li><li>Enable <code>HY_LOG_TO_FOLDER</code> and logs are created in <code>/var/logs/service-name</code> (which the dev <code>docker-compose.yml</code> maps to local volume so you can view the logs even if the container is stopped)</li><li>You can be notified by email if the server sends a 5xx response <ul><li>Enable <code>HY_SEND_ERROR_EMAILS</code></li><li>then configure <code>HY_SMTP_PORT</code>, <code>HY_SMTP_SERVER</code>, <code>HY_ERROR_EMAIL_RECIPIENTS</code>, and <code>HY_ERROR_EMAIL_FROM</code></li></ul></li><li>View and change the logging verbosity at runtime with a GET and/or PUT to <code>/_logging</code> (provide details)</li></ul></li><li><p>Easily extend the logging capabilities using the standard Python <code>logging</code> modules</p><ul><li>Publish to Slack on 5xx, or whatever circumstance you wish (the 500th GET to a particular resource? - only limit is your imagination)</li><li>See and modify <code>utils/log_setup.py</code></li></ul></li><li><p>change logging verbosity at run-time:</p><ul><li>From the root document, follow the <code>logging</code> link relation and <ul><li>GET to see the current logging verbosity,</li></ul><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li>change it then PUT it back</li></ul></li></ul></li></ul>',1))])}const v=t(c,[["render",u]]);export{k as __pageData,v as default};

import{_ as t,C as i,c as l,o as r,j as a,al as n,a as s,G as d}from"./chunks/framework.CEo5TfsR.js";const _=JSON.parse('{"title":"Hypermea Core Library","description":"","frontmatter":{},"headers":[],"relativePath":"features/scaffolding-tools/hypermea-core.md","filePath":"features/scaffolding-tools/hypermea-core.md"}'),c={name:"features/scaffolding-tools/hypermea-core.md"},u={class:"warning custom-block"};function h(p,e,g,m,f,y){const o=i("centered-image");return r(),l("div",null,[e[2]||(e[2]=a("h1",{id:"hypermea-core-library",tabindex:"-1"},[s("Hypermea Core Library "),a("a",{class:"header-anchor",href:"#hypermea-core-library","aria-label":'Permalink to "Hypermea Core Library"'},"​")],-1)),a("div",u,[e[0]||(e[0]=a("p",{class:"custom-block-title"},"Work in progress",-1)),d(o,{src:"/img/work-in-progress.png"}),e[1]||(e[1]=a("p",null,"This warning will be removed once this page has passed testing.",-1))]),e[3]||(e[3]=n('<h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p>The core library is used by the hypermea toolkit. It is not intended to be used by itself (though if you know what you are doing, you could).</p><p>When you create an API using hypermea, this library is automatically installed and is available for you to use.</p><p>Please see <a href="https://github.com/pointw-dev/hypermea" target="_blank" rel="noreferrer">hypermea</a> for the full toolkit and documentation.</p><h2 id="the-core-library" tabindex="-1">The core library <a class="header-anchor" href="#the-core-library" aria-label="Permalink to &quot;The core library&quot;">​</a></h2><p>The core library consists of the following modules. These are all wired up in your API when you created it using hypermea. Some parts of the library provide useful functions to API developers. Others are intended for internal use and will not likely be useful to you directly.</p><h3 id="useful" tabindex="-1">Useful <a class="header-anchor" href="#useful" aria-label="Permalink to &quot;Useful&quot;">​</a></h3><h4 id="hypermea-core-utils" tabindex="-1">hypermea.core.utils <a class="header-anchor" href="#hypermea-core-utils" aria-label="Permalink to &quot;hypermea.core.utils&quot;">​</a></h4><p>details</p><ul><li>get_api() -&gt; flask.testing.FlaskClient</li><li>get_db() -&gt; pymongo.database.Database</li><li>update_etag_and_updated(record: dict) -&gt; dict</li><li>make_error_response(message: str, code: int, issues: Optional[List[Dict]] = None) -&gt; flask.wrappers.Response</li><li>url_join(*parts: str) -&gt; str</li></ul><p>additional, but not likely useful</p><ul><li>get_my_base_url() -&gt; str</li><li>get_id_field(collection_name: str) -&gt; str</li><li>get_resource_id(resource: dict, collection_name: str) -&gt; str</li><li>is_mongo_running() -&gt; bool (coming soon)</li><li>echo_message()</li></ul><p>Note: the <code>log_setup.py</code> under <code>utils</code> is used to set up logging and has no uses for your API</p><h4 id="validation" tabindex="-1">validation <a class="header-anchor" href="#validation" aria-label="Permalink to &quot;validation&quot;">​</a></h4><p>Describe the <code>HypermeaValidator</code>, used to add the following validations and types, as well as inheritable to extend:</p><p>validations</p><ul><li>unique_ignorecase</li><li>unique_to_parent</li><li>unique_to_tenant (coming soon)</li><li>remote_relation (coming soon)</li></ul><p>types</p><ul><li>iso_date</li><li>iso_time</li><li>iso_duration</li></ul><p>(link to Eve doc for more info on extending)</p><h4 id="logging" tabindex="-1">logging <a class="header-anchor" href="#logging" aria-label="Permalink to &quot;logging&quot;">​</a></h4><p>background explanation, mention the addition to the standard python logging</p><ul><li>configures <ul><li>standard formatting,</li><li>logging errors to SMTP (<code>HY_SEND_ERROR_EMAILS</code>),</li><li>logging to folder (<code>HY_LOG_TO_FOLDER</code>) - doco details (timed rotation at midnight, etc.)</li></ul></li><li>the TRACE level accessible with <code>LOG.trace()</code></li><li>the <code>@trace</code> decorator (enabled by default, disable by setting <code>HY_TRACE_LOGGING</code> to disable)</li></ul><p>reference how to adjust the logging verbosity level in the hypermea docs</p><h4 id="settings-manager" tabindex="-1">settings_manager <a class="header-anchor" href="#settings-manager" aria-label="Permalink to &quot;settings_manager&quot;">​</a></h4><p>details: singleton, pulls from environment variables, overridable with <code>_env.conf</code>, etc. (note no underscores in prefix)</p><ul><li>create(prefix: str, setting_name: str, default_value: str = None, is_optional: bool = False)</li><li>set_prefix_description(prefix: str, description: str)</li><li>has_enabled(setting_name: str) -&gt; bool</li><li>dump(prefix: str = None, callback: Optional[Callable[[str], None]] = None)</li><li>get(setting_name: str, default_value: str = None)</li><li>[]</li></ul><h3 id="not-ones-you-will-likely-use-directly" tabindex="-1">Not ones you will likely use directly <a class="header-anchor" href="#not-ones-you-will-likely-use-directly" aria-label="Permalink to &quot;Not ones you will likely use directly&quot;">​</a></h3><h4 id="affordances" tabindex="-1">affordances <a class="header-anchor" href="#affordances" aria-label="Permalink to &quot;affordances&quot;">​</a></h4><p>details</p><h4 id="gateway" tabindex="-1">gateway <a class="header-anchor" href="#gateway" aria-label="Permalink to &quot;gateway&quot;">​</a></h4><p>details</p><h4 id="hooks" tabindex="-1">hooks <a class="header-anchor" href="#hooks" aria-label="Permalink to &quot;hooks&quot;">​</a></h4><p>details</p><h4 id="render" tabindex="-1">render <a class="header-anchor" href="#render" aria-label="Permalink to &quot;render&quot;">​</a></h4><p>details</p>',36))])}const k=t(c,[["render",h]]);export{_ as __pageData,k as default};

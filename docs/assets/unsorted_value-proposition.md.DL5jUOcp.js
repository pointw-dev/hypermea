import{_ as o,C as r,c as i,o as n,j as e,al as d,a as s,G as l}from"./chunks/framework.CEo5TfsR.js";const y=JSON.parse('{"title":"Value Proposition","description":"","frontmatter":{"head":[["link",{"rel":"canonical","href":"https://pointw-dev.github.io/hypermea/unsorted/value-proposition.html"}]]},"headers":[],"relativePath":"unsorted/value-proposition.md","filePath":"unsorted/value-proposition.md"}'),p={name:"unsorted/value-proposition.md"},c={class:"warning custom-block"};function h(u,t,m,b,f,g){const a=r("centered-image");return n(),i("div",null,[t[2]||(t[2]=e("h1",{id:"value-proposition",tabindex:"-1"},[s("Value Proposition "),e("a",{class:"header-anchor",href:"#value-proposition","aria-label":'Permalink to "Value Proposition"'},"​")],-1)),e("div",c,[t[0]||(t[0]=e("p",{class:"custom-block-title"},"Work in progress",-1)),l(a,{src:"/img/work-in-progress.png"}),t[1]||(t[1]=e("p",null,"This warning will be removed once this page has passed testing.",-1))]),t[3]||(t[3]=d('<p>Plug. Play. Scale. Stop hard-coding routes and rewriting clients. Hypermea lets you build APIs that explain themselves, so frontends can adapt without breaking.</p><p>Ready on Day One Your service comes with secure defaults, HAL links, pagination, rate limiting, structured logs, and more—no config required.</p><p>Fast Start, Smooth Finish Start building in seconds. Add advanced features like writable forms, embeddable resources, or link-based workflows only when you need them.</p><p>Built for Developers, Backed by Ops Hypermea brings joy to developers and clarity to operations. Developer experience is elegant; DevOps experience is uncompromising.</p><p>Powered by Standards Under the hood? HAL, RFCs, and ISO specs. Hypermea speaks fluent web so you don’t have to write a spec from scratch.</p><h2 id="the-problem" tabindex="-1">The Problem <a class="header-anchor" href="#the-problem" aria-label="Permalink to &quot;The Problem&quot;">​</a></h2><ul><li>APIs are brittle.</li><li>Clients depend on out-of-band docs and hard-coded paths.</li><li>Backend changes risk breaking frontends.</li></ul><h2 id="the-solution" tabindex="-1">The Solution <a class="header-anchor" href="#the-solution" aria-label="Permalink to &quot;The Solution&quot;">​</a></h2><p>Hypermea makes hypermedia-first APIs practical, testable, and evolvable.</p><h2 id="what-it-does" tabindex="-1">What It Does <a class="header-anchor" href="#what-it-does" aria-label="Permalink to &quot;What It Does&quot;">​</a></h2><p>✅ Declarative resource modeling (Pydantic) ✅ HAL-compliant responses with links &amp; forms ✅ Scaffold tools (hy resource create, hy link list) ✅ Version-aware pagination &amp; concurrency ✅ Opt-in design—start simple, grow complex</p><h2 id="why-it-matters" tabindex="-1">Why It Matters <a class="header-anchor" href="#why-it-matters" aria-label="Permalink to &quot;Why It Matters&quot;">​</a></h2><ul><li>Clients explore via links, not brittle contracts.</li><li>Hypermedia guides interaction, not static docs.</li><li>Your API is testable, debuggable, and forward-compatible.</li></ul><h2 id="compare-to-alternatives" tabindex="-1">Compare to alternatives <a class="header-anchor" href="#compare-to-alternatives" aria-label="Permalink to &quot;Compare to alternatives&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Feature</th><th>Hypermea (HAL)</th><th>OpenAPI</th><th>GraphQL</th><th>JSON-RPC</th></tr></thead><tbody><tr><td>Client/Server Coupling</td><td>Loose (hypermedia-driven)</td><td>Tight (contract-first)</td><td>Medium (typed schema)</td><td>Tight</td></tr><tr><td>Discoverability</td><td>✅ via _links, _forms, affordances</td><td>❌ Clients need prior knowledge</td><td>❌ Schema known, ops must be known</td><td>❌ Hard-coded method names</td></tr><tr><td>Runtime Evolvability</td><td>✅ Clients adapt by following links</td><td>❌ Requires versioning</td><td>❌ Dependent on schema evolution</td><td>❌ Requires versioning</td></tr><tr><td>Tooling for Devs</td><td>✅ CLI, Pydantic, HAL tooling</td><td>✅ Great editor support</td><td>✅ Great tooling &amp; IDEs</td><td>⚠️ Minimal</td></tr><tr><td>Spec Format</td><td>HAL + affordance conventions</td><td>OpenAPI YAML/JSON</td><td>GraphQL SDL</td><td>Custom JSON-RPC protocol</td></tr><tr><td>Forms / Writable Affordances</td><td>✅ Supports method affordances</td><td>⚠️ Manual or via extensions</td><td>❌ No affordance concept</td><td>❌ No affordance concept</td></tr><tr><td>Batching &amp; Query Composition</td><td>⚠️ Via link traversal patterns</td><td>❌ One route per operation</td><td>✅ Batching &amp; nesting built-in</td><td>✅ Batching supported</td></tr></tbody></table>',15))])}const k=o(p,[["render",h]]);export{y as __pageData,k as default};
